
JUMPDIR Notes
~~~~~~~~~~~~~~~~

________________________________________________________________________________
Dev Plan

    (x) Print usage info

    (x) Print debug output

    (x) Flip slashes

    (x) Auto aggregation of words with spaces
     
    (x) Change directory straight

    ( ) Read/write data file

    ( ) Implement data file history size read/write
    ( ) Implement data file dir echo     read/write
    ( ) Implement data file net search   read/write

    (x) Error reporting routine
     
    ( ) Change drive letter additionally

    ( ) Set history size

    ( ) Print state variables

    ( ) Set report switch

    ( ) Option -list without wildcards

    ( ) Go to numbered historical entry

    ( ) Option -clean to purge non-existent locations

    ( ) Wildcard matches

    ( ) Option -list with wildcards

    ( ) Option -purge with wildcards

    ( ) Set netsearch switch

    ( ) Guard against attempt to reuse remembered connections
    
    ( ) Centralized memory alloc failure handling

________________________________________________________________________________
Strategies

    1) Trivial change (null directory, or non-wildcarded & begins with "."
       or "..").

    2) Straight non-wildcarded directory - attempt to change directly to that
       directory.

    3) Wildcarded path (for example, "Z:/foo/.../bar") - Match against
       historical entries. On failure, use wildcard directly (if enabled) and 
       select first match. Halt on failure.

    4) Absolute directory-letter path (for example, "g:/foo/bar") - attempt to
       change verbatim. Halt on failure.

    5) Absolute UNC share path (for example, "//host/share/foo/bar").

    6) Rooted path - First attempt relative to current drive. On failure,
       match against previously visited drives.

    7) Tail match of historical path. For example, match "oo/bar" against
       previously visited "D:/qux/foo/bar".

    8) Historical partial path - match against partial historical paths. For
       example, if we've been to T:/qux/foo/bar/baz, then "oo/bar" will match
       against the "bar" directory on this path.

    9) Peer match - If the front part of the specification matches against the
       tail of a historical path, try the extension. For example, given
       "tox/clu/fle", and we've been to "H:/injex/botox", then try
       "H:/injex/botox/clu/fle".


________________________________________________________________________________
Result Path Echo

    Add an option to print the selected path, but without actually changing to
    it.

________________________________________________________________________________
Virtual Drive Labels

    Provide an aliasing mechanism to map a label to any of the following:

        * server share
        * disk letter
        * path (like subst)

    For example,

        > go cdrom:\docs\pdf
        > go local1:\
        > go msprod:Visual Studio 2010

________________________________________________________________________________
Unicode
    The old setdir command does not properly handle directories with Unicode
    (non-Latin1) characters. Verify the jumpdir properly handles these
    directories. My music collection contains a lot of directories like this.

________________________________________________________________________________
Jump Data File

    %JUMPDAT%                 (user-defined)
    %USERPROFILE%/jumpdir.dat (default)

    Use binary data file, with optional XML import/export.

________________________________________________________________________________
Option: -clean [pattern]

    When auto clean is implemented. Examine all historical entries that match
    the given pattern (default pattern is "..."). Entries that no longer exist
    are removed from the history.

________________________________________________________________________________
Option: -purge [pattern]

    Purge all historical entries matching the given pattern.

________________________________________________________________________________
Option: -push

    Invoke "pushd ." before changing directories.

________________________________________________________________________________
Note: Guard against attempt to reuse remembered connections

    > net use x: \\foo\bar /persistent yes
    > reboot
    > net use x: \\qux\qax
        --> prompt / error message

    Since jumpdir is its own type of persistent connection, all jumpdir-mapped
    connections should not be persistent.

________________________________________________________________________________
Feature: Use ellipsis matching for history fetch

    > go mypath/.../out

    Matches existing historical entry "c:/srh/source/mypath/lab/work1/out"

________________________________________________________________________________
Feature: Use ellipsis matching to locate new directory

    > go mypath/.../out

    Matches new directory "c:/srh/source/mypath/lab/work1/out". This might need
    some timeout or warning, as it could be long operation.

________________________________________________________________________________
Increase Default History Size?

    Right now the default is 200 entries. I'd suggest bumping this to at
    least 500, and possibly higher.

    Perhaps a better option, when paired with auto cleanup, would be to set a
    maximum age. You should also probably be able to set a maximum age for
    removable drives, since these can't be automatically cleaned up when the
    drive is gone.

________________________________________________________________________________
Note: Skip . and .. prefixed paths

    Paths beginning with . and .. should not be matched against historical
    entries -- it should be interpreted literally only.

________________________________________________________________________________
Feature: File Search

    Add an option to go to the most recent directory that contains the
    specified file, like so:

        C:\> go -f jumpdir.dat
        D:\srh> 

    An optional enhancement to this would be to go to the most recent
    directory that contains a file that matches the given fileglob.

________________________________________________________________________________
Feature: Bare History List

    Add an option to give a bare list of the historical entries. This would
    be identical to the -list option, except that output lines would not be
    prefixed with the slot number.

________________________________________________________________________________
Nicknamed Directories

    The ability to nickname a location for future reference.  Don't require
    magic syntax, just examine list of known nicknames first.

    Should be able to list all known nicknames.
    Should be able to remove/change a nickname.

________________________________________________________________________________
Context Bubbling

    The ability to bubble-up entries according to some condition.

    This could be useful, for example, when you navigate amongst three
    enlistments to the same tree.  Here, you could bubble up all entries
    under one of the trees, so that tree would have priority when
    searching. See also the "Search along current directory" entry below. For
    example:

    > go -prefer c:/srh/...

    would move all matching paths to the top of the history stack.

________________________________________________________________________________
Directory Pinning

    Flag a directory so that it will not be retired.

________________________________________________________________________________
Subtree Scouting

    Mark a directory for exhaustive search.  Could also take an integer
    for the depth to search (0 means exhaustive).  Directories are flagged
    for 1 level by default (2 means search subdirectories also).  For
    example, "go -scout:2 D:\foo\bar" would add all directories up to two
    levels down to the jumpdir history. This could also be accomplished by a
    script. Another thought is that this could simultaneously remove
    obsolete entries under the given subtree.

________________________________________________________________________________
Better Handling of Removable Media

    Right now we ignore all directories on removable media. Provide a way
    to log removable media directories, further specialized to the volume
    name (or some other identifier).

    Another idea: in order to avoid unnecessary spinup on high-latency
    removable media, only check serial numbers and jump to removable directories
    if the current directory is on that drive, or if the drive is specified on
    the path.

    For example:

        C:/> go bar
        No matching directory found for "alak".

        C:/> go u:...bar

        U:/foo/bar> c:

        C:/> u:

        U:/> go bar

        U:/foo/bar>

________________________________________________________________________________
Context Scripts

    Specify a script/executable to invoke when changing to a particular
    directory.

    Another idea -- specify a standard script (jumpdirrc.cmd) to invoke
    if present in a directory.

    Specify a script to invoke when changing to any directory in a
    particular tree.

    Problem: it's too easy to get to a directory via methods other than
    jumpdir, so the results would be inconsistent.

________________________________________________________________________________
Shorter timeout for speculative network searches

    Right now it takes a long time to try a speculative directory on a
    network share if it doesn't exist (if the server is slow or the share no
    longer exists.)  It would be nice to add a mechanism to specify a
    shorter timeout period for such attempts.

________________________________________________________________________________
Auto Cleanup

    jumpdir should automatically purge entries for directories that no longer
    exist. This should happen whenever a historical match is found to no longer
    exist. Additionally, jumpdir could randomly test an historical entry to
    ensure that it still exists, provided it's not a slow drives, such as a
    floppy drive. Another idea would be to tag each entry with a "freshness"
    stamp. The item not checked for the greatest amount of time could be
    chosen. All items could have their timestamps updated when last seen as
    well. This wouldn't work well for network or removable drives, though.

________________________________________________________________________________
Wildcard Paths + Netmapped Drives

    If drive X: is mapped to a network drive, then X:*foo should automatically
    use the current sharename in place off the X: drive before performing the
    match.

________________________________________________________________________________
Search Along Current Directory / Prefer Nearest

    Today setdir works like this:

        D:\family\FCES\PTSA> go ck...origin
        D:\family\CKMS\PTSA\directory\2008\data\origin> go ptsa
        D:\family\FCES\PTSA>

    Since we went to a directory under CKMS/, the second go command might
    prefer that path, rather than jumping to the FCES/ variant.

    Another way of describing this is to switch priority from the usual
    chronological priority to an ancestral priority (that is, choose the
    resulting match with the nearest relation distance (up to common ancestor
    directory and back down to the new directory).

    In the example above with the second go command {ptsa},
    D:\family\FCES\PTSA\directory\2008\data\origin is eight hops away, while
    D:\family\ CES\PTSA\directory\2008\data\origin would be four hops away.

    Perhaps a "-n" switch would trigger a nearest match search.

________________________________________________________________________________
Duplicate Entries from Shortened Names

    These two entries show up independently in the history.

        C:/DOCUME~1/v-stevho
        C:/Documents and Settings/v-stevho

    This tool should recognize both as being equivalent. Probably canonicalize
    each path to the full names.
________________________________________________________________________________
Add an "aggressiveness" option to control how aggressive search is

    Ordered by potential time impact. For example, net search is high, hitting
    historically visited paths is low.

________________________________________________________________________________
Implement Sparse Matching

    As an alternative to using ellipsis path matching, provide a way to make a
    sparse match which matches characters in order with any number of
    interleaving characters (equivalent to putting ".*" between every character
    in the match). Perhaps prefixed with an escape character to denote a sparse
    match.

________________________________________________________________________________
Support ~ for home

    Users should be able to start their path with a tilde directory to denote
    either the HOME directory or, if HOME is undefined, the USERPROFILE
    directory.
